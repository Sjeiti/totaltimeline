@import 'icomoon';

[data-overview] {
  user-select: none;
  background-color: #aaa;
  position: relative;
  padding: 0 @screenPadding;
  color: white;
  .gradientHorizontal(#aaa,#bbb);
  &:before {
    content: '';
    .lt;
    display: block;
    width: @screenPadding;
    height: 100%;
    background-color: #bbb;
  }
  time {
    font: @fontTime;
    padding: 2px 5px;
    white-space: nowrap;
    overflow: hidden;
  }
  label {
    .lb(-@screenPadding,0);
    z-index: 2;
    width: @screenPadding;
    height: 100%;
    text-align: center;
    font-size: 0.8rem;
    line-height: 2rem;
    color: rgba(0,0,0,0.2);
    transition: color 100ms linear;
    transform: translateX(2px);
    &:hover {
      text-decoration: none;
      color: rgba(0,0,0,0.4);
    }
    &:last-of-type {
      left: auto;
      right: -@screenPadding;
    }
  }
  input:checked+label {
    color: #444;
    &:before { content: @icn-lock; }
  }
  .span {
    position: relative;
    .size(100%);
    > time {
      .lt;
      z-index: 1;
      &:last-of-type {
        left: auto;
        right: 0;
      }
    }
  }
  .range {
    @markW: 4px;
    position: relative;
    overflow: hidden;
    .lt;
    .size(100%);
    min-width: 1px;
    box-shadow: 0 16px 32px fade(black, 50%) inset;
    .before, .after {
      position: absolute;
      bottom: 0;
      width: @markW;
      height: @markW;
      box-shadow: 0 0 0 @markW rgba(0,0,0,0.3) inset;
    }
    .before {
      left: 0;
      transform: translate(-(@markW/2),@markW/2) rotate(-45deg);
    }
    .after {
      right: 0;
      transform: translate(@markW/2,@markW/2) rotate(45deg);
    }
    > time {
      &:nth-of-type(2) {
        display: block;
        text-align: center;
        width: 100%;
      }
      &:first-of-type, &:last-of-type {
        .lb;
        max-width: 50%;
      }
      &:first-of-type {
        text-align: left;
      }
      &:last-of-type {
        left: auto;
        right: 0;
        text-align: right;
      }
    }
  }
}
